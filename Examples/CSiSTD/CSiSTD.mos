###################################################################################################
# The complete cell is 12.5x12.5 cm
# All along the solar cell there is a 1mm space free of fingers
# Fingers are 200µm wide
# there are two vertical fingers at the left and right side.
# Horizontal fingers are therefore: 12.5-0.2-0.04=12.26 cm long 
###################################################################################################
#		x1  y1		x2  	y2	Nx	Ny	name
newmesh 	0.0 0.0 	12.26	0.02	10 	1	h_finger

tic
###################################################################################################
# our mesh will consist of verious areas. One such area is "finger", where the finger properties 
# are defined (e.g. sheet resistance, zero photocurrent, etc.)
# To create an area we simply set a value for it. The actual value is irrelevant as we will 
# define the final parameter sets after creating the mesh geometry.
# Important is that all elements in the mesh h_finger become members of the area finger
# for that we use the assign_properties command
###################################################################################################
#			<mesh>.<area>		electrode index		sheet resistance
set_Rel			h_finger.finger	0			0.005
assign_properties 	h_finger.finger

###################################################################################################
# Above the finger we have active area up to the next finger.
# The width is the same as the finger, the height is computed such that the hight of the cell will 
# be exactly 12.5 cm. The precison used here is perhaps exagerated. However, be aware that when 
# glueing meshes together you do not want gaps to occur (i.e. if you use less accurate dimensions
# be sure to take into account your rounding errors!) 
###################################################################################################
newmesh 	0.0 0.0 	12.26	0.178064516129032	10 	1	h_cell

###################################################################################################
# Create the area "cell" for the active cell area
###################################################################################################
set_Rel			h_cell.cell		0			0.005
assign_properties 	h_cell.cell

###################################################################################################
# Glueing time!
# We glue the meshes h_finger to h_cell and then continue till we have 63 fingers with h_cells 
# in between
###################################################################################################
#		x_off	mesh1  		mesh2		mesh_out
joinmesh_v 	0.0 	h_finger	h_cell		h_unit
joinmesh_v 	0.0 	h_unit		h_unit		2h_unit
joinmesh_v 	0.0 	2h_unit		2h_unit		4h_unit
joinmesh_v 	0.0 	4h_unit		4h_unit		8h_unit
joinmesh_v 	0.0 	8h_unit		8h_unit		16h_unit
joinmesh_v 	0.0 	16h_unit	16h_unit	32h_unit
joinmesh_v 	0.0 	32h_unit	16h_unit	48h_unit
joinmesh_v 	0.0 	48h_unit	8h_unit		56h_unit
joinmesh_v 	0.0 	56h_unit	4h_unit		60h_unit
joinmesh_v 	0.0 	60h_unit	2h_unit		62h_unit
joinmesh_v 	0.0 	62h_unit	h_finger	63fingers

###################################################################################################
# Now we have lots of meshes we do not need anymore. It saves memory to delete some we do not need 
# anymore.
###################################################################################################
rm h_finger
rm h_cell
rm h_unit
rm 2h_unit
rm 4h_unit
rm 8h_unit
rm 16h_unit
rm 32h_unit
rm 48h_unit
rm 56h_unit
rm 60h_unit
rm 62h_unit


###################################################################################################
# Now we make the edges. Directly left and right of the fingers and cells we created are two
# vertical fingers. Next to these two fingers there is 1mm cell area to the edge of the cell.
# The vertical meshes here are 12.3 cm tall (be accurate here to avoid gaps!)
###################################################################################################
newmesh 	0.0 0.0 	0.02 	12.299999999999984	1 	10 	v_finger
set_Rel			v_finger.finger	0			0.005
assign_properties 	v_finger.finger

newmesh 	0.0 0.0 	0.1	12.299999999999984	1	10 	v_cell
set_Rel			v_cell.cell		0			0.005
assign_properties 	v_cell.cell


###################################################################################################
# For the top and bottom edges we only need to define the cell area (the fingers are already there)
# These meshes are 12.5 cm long (i.e. the final width of the mesh, including the sides defined 
# above)
###################################################################################################
newmesh 	0.0 0.0 	12.5	0.1	10 	1		h_cell
set_Rel			h_cell.cell		0			0.005
assign_properties 	h_cell.cell

###################################################################################################
# Glue things together
###################################################################################################
joinmesh_h	0.0	v_cell		v_finger	lside
joinmesh_h	0.0	v_finger	v_cell		rside	
joinmesh_h	0.0	lside		63fingers	lcell
joinmesh_h	0.0	lcell		rside		lcellr
joinmesh_v 	0.0 	h_cell		lcellr		bcell
joinmesh_v 	0.0 	bcell		h_cell		a_area

###################################################################################################
# cleanup
###################################################################################################
rm v_finger
rm v_cell
rm h_cell
rm lside
rm rside
rm lcell
rm lcellr
rm bcell
toc
###################################################################################################
# Create an area of the busbars
###################################################################################################
set_Rel		a_area.tab	0	0.005

###################################################################################################
# The geometry of the busbars is defined using polygons. Here is the first busbar.
###################################################################################################
define_poly
2.00833333	0.0000000
2.15833333	0.0000000
2.15833333	12.221613
2.08333333	12.410000
2.00833333	12.221613
2.00833333	0.0000000
define_poly

###################################################################################################
# Note that the position and width do not "fit" in the mesh very well. (Note that we could have 
# prepared for this and crafted our mesh such that it would fit nicely, apart from the tapered 
# ends. This is probably a cleaner method than what we do here but this is easier). For this PVMOS 
# has a trick. PVMOS can "resolve" certain geometries, like polygons and circles, in the mesh. 
# PVMOS will then split elements near the contour until the contour is accurately described (see 
# the manual for a more detailed description of 'resolve_poly')
# It is best to not use this trick to resolve 63 fingers as resolving contours tend to make a mesh 
# messy, which may lead to poorer performance. Three busbars, however, should be no problem. 
# Next I will resolve the busbar polygon in the mesh to 10µm precision. 
###################################################################################################
resolve_poly a_area 0.001 1 

###################################################################################################
# Once the polygon is accurately resolved in the mesh we select the elements which are to become
# part of the area 'busbar'.
###################################################################################################
select_poly		a_area
assign_properties 	a_area.tab
deselect 		a_area

###################################################################################################
# Repeat for the other two busbars
###################################################################################################
define_poly
6.17500000	0.0000000
6.32500000	0.0000000
6.32500000	12.221613
6.25000000	12.410000
6.17500000	12.221613
6.17500000	0.0000000
define_poly

resolve_poly a_area 0.001 1 

select_poly		a_area
assign_properties 	a_area.tab
deselect 		a_area

define_poly
10.34166667	0.0000000
10.49166667	0.0000000
10.49166667	12.221613
10.41666667	12.410000
10.34166667	12.221613
10.34166667	0.0000000
define_poly

resolve_poly 		a_area 0.001 1 
select_poly		a_area
assign_properties 	a_area.tab
deselect 		a_area


###################################################################################################
# Create contacts for the cell. We first make a spacer mesh at the top and bottom. The spacer will
# mostly be inactive. To avoid influence of the spacer on the simulation it is for the most part 
# insulating (i.e. high electrode sheet resistances and high resistances between 
# electrodes). However, we will create three small patches which connect to the front and back 
# electrodes there where the busbars are. These patches will then be connected to the positive and 
# negative nodes (external bias).
###################################################################################################
newmesh 	0.0 0.0 	12.5   	0.1	1 	1 	spacer

###################################################################################################
# Glue the spacers at the top and bottom of the device
###################################################################################################
joinmesh_v	0.0	spacer		a_area		b_area
joinmesh_v	0.0	b_area		spacer		cell

rm spacer
rm a_area
rm b_area

###################################################################################################
# Create areas for the tabbing wires at the top and bottom for connecting the cell
###################################################################################################
set_Rel		cell.tab_top	0	0.005
set_Rel		cell.tab_bot	0	0.005


###################################################################################################
# The tabbing wires must also be resolved in the mesh. We first resolve the bottom tabbing wires
###################################################################################################
resolve_rect	cell	0.001	2.00833333	0.0	2.15833333	0.1
resolve_rect	cell	0.001	6.17500000	0.0	6.32500000	0.1
resolve_rect	cell	0.001	10.34166667	0.0	10.49166667	0.1

###################################################################################################
# Select elements and assign to the bottom tabbing wire area
###################################################################################################
select_rect	2.00833333	0.0	2.15833333	0.1	cell
assign_properties	cell.tab_bot
deselect cell

select_rect	6.17500000	0.0	6.32500000	0.1	cell
assign_properties	cell.tab_bot
deselect cell

select_rect	10.34166667	0.0	10.49166667	0.1	cell
assign_properties	cell.tab_bot
deselect cell

###################################################################################################
# Repeat for the top tabbing wires
###################################################################################################
resolve_rect	cell	0.001	2.00833333	12.6	2.15833333	12.7
resolve_rect	cell	0.001	6.17500000	12.6	6.32500000	12.7
resolve_rect	cell	0.001	10.34166667	12.6	10.49166667	12.7

select_rect	2.00833333	12.6	2.15833333	12.7	cell
assign_properties	cell.tab_top
deselect cell

select_rect	6.17500000	12.6	6.32500000	12.7	cell
assign_properties	cell.tab_top
deselect cell

select_rect	10.34166667	12.6	10.49166667	12.7	cell
assign_properties	cell.tab_top
deselect cell

###################################################################################################
# Optional: Define a shading pattern
###################################################################################################
# Uncomment the following if you want to simulate what your solar cell is worth (at least 
# efficiency wise) after some misfit under the name Banksy decided to spray-paint a rat hanging 
# from a parachute on the solar cell.
###################################################################################################
## We first load a polygon from a file describing the graffiti. 
## Note that it would be possible to define the file right here but with 400 points that makes 
## a rather unreadable input file.
#simplify cell
#load_poly graffiti.dat
#
## The graffiti will shade the solar cell beneath it so we make an area "shade"
#set_1DJV 	cell.shade	0	1e-12 	1.0 	0.0 	1e-5 	1e5	1.12
#set_Rel		cell.shade	1	40
#set_Rel		cell.shade	0	0.005
#
## the mesh it rather coarse in many places so we better first refine the mesh around the polygon.
#resolve_poly cell 0.001 1 
#
## Using still the same polygon we select all elements within the polygon
#select_poly cell
#
## These elemens will be shaded. This only affects the area cell so we make a sub-selection for 
## the area cell
#select_area cell.cell
#
## those elements are assigned to the area shade
#assign_properties 	cell.shade
#deselect cell
###################################################################################################

###################################################################################################
# Now for the parametrization
###################################################################################################
# diode parameters
define J0 	1e-12
define nid 	1.0
define Jph	0.035
define Rs	1e-5
define Rsh	1e5
define Eg	1.12

# electrode resistances
define Rf	40
define Rb	0.005
define Rtab	0.005
define Rfi	0.15

# active cell area
set_1DJV 	cell.cell	0	[J0]	[nid]	[Jph] 	[Rs] 	[Rsh]	[Eg]
# electrode 1 is the Anode (emitter)
set_Rel		cell.cell	1	[Rf]
# electrode 0 is the Cathode (bulk, BSF, and back contact)
set_Rel		cell.cell	0	[Rb]

# grid fingers
set_1DJV 	cell.finger	0	[J0]	[nid]	0.0 	[Rs] 	[Rsh]	[Eg]
set_Rel		cell.finger	1	[Rfi]
set_Rel		cell.finger	0	[Rb]

# busbar with tabbing wire
set_1DJV 	cell.tab 	0	[J0]	[nid]	0.0 	[Rs] 	[Rsh]	[Eg]
set_Rel		cell.tab	1	[Rtab]
set_Rel		cell.tab	0	[Rtab]

# positive contact (tabbing wires at the top).
set_R 		cell.tab_top 	0	1e20
set_Rel		cell.tab_top	1	1e8
set_Rel		cell.tab_top	0	[Rtab]
set_Rvp		cell.tab_top	0	1e-8
set_SplitX	cell.tab_top
set_SplitY	cell.tab_top

# negative contact (tabbing wires at the bottom).
set_R 		cell.tab_bot 	0	1e20
set_Rel		cell.tab_bot	1	[Rtab]
set_Rel		cell.tab_bot	0	1e8
set_Rvn		cell.tab_bot	1	1e-8
set_SplitX	cell.tab_bot
set_SplitY	cell.tab_bot

# spacer (insulating).
set_R 		cell.spacer 	0	1e8
set_Rel		cell.spacer	1	1e20
set_Rel		cell.spacer	0	1e20
set_SplitX	cell.spacer
set_SplitY	cell.spacer


###################################################################################################
# After all the resolving of specific geometries the mesh got messy. This will not fix everything
# but does clean up things considerably (but it adds a bit of chaos here and there).
###################################################################################################
simplify cell

###################################################################################################
# As the mesh is now small, it is a good moment to inspect the geometry. Here we output the
# area definitions and the area paremeters
###################################################################################################
printarea cell celldefs.dat
printpars cell cellpars.dat


###################################################################################################
# Now we split elements again to get a certain minimum resolution. This resolution ensures we have
# at least 3 elements between two horizontal fingers.
###################################################################################################
split_coarse cell 0.066
printmesh cell mesh_0.dat


###################################################################################################
# Do some adaptive meshing to adapt the mesh to the electrical properties
###################################################################################################
adaptive_solve 	cell 	0.0 	0.3	3
printmesh cell mesh_1.dat

###################################################################################################
# Run IV sweep, export some potentials and an IV curve
###################################################################################################
solve 		cell 	0 	0.7 	29
surfVplot 	cell 0 0.1 12.5 12.6 1000 1000 0.6 Pot_06.dat
surfVplot 	cell 0 0.1 12.5 12.6 1000 1000 0.0 Pot_00.dat
printIV 	cell IV.dat

