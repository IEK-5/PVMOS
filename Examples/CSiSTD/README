--------------------------------------------------------------------------------
-                        Example c-Si Cell with three busbars                  -
--------------------------------------------------------------------------------
B. E. Pieters - IEK-5 Photovotaik, Forschungszentrum Jülich - Nov. 2014
--------------------------------------------------------------------------------

-Introduction-------------------------------------------------------------------
--------------------------------------------------------------------------------

In this example I show how you can script a mesh together. In general the 
method a shown in the Pinup example is much simpler to do. However, that method
depends on GNU Octave and the time and memory required to build the mesh 
increases steeply for higher resolution meshes. The method here only uses 
functions built into PVMOS, i.e. is independent on other software. Furthermore, 
the here used methods are often faster and require less memory. The downside of 
this method is that it is harder to make and easier to shoot yourself in the 
foot.

-Cell Geometry------------------------------------------------------------------
--------------------------------------------------------------------------------

In this example I will show how one can define a crystalline silicon solar cell 
with a typical grid and three busbars. Here is a schemetic ASCII-art of the 
cell design:


                   o---------------- 125 mm --------------------o
                   +--------------------------------------------+   o
                   |      |               |              |      |   |
                   | +----|---------------|--------------|----+ |   |
                   | |    |               |              |    | |   |
                   | +----|---------------|--------------|----+ |   |
                   | |    |               |              |    | |   |
                   | +----|---------------|--------------|----+ |   |
   Fingers:        | |    |               |              |    | |   |
   width: 0.2mm  \ | +----|---------------|--------------|----+ |   |
   63 lines       \| |    |               |              |    | |   125 mm
   distance:       \ +----|---------------|--------------|----+ |   |
   1.98387 mm      |\|    |               |              |    | |   |
   length: 123 mm  | +----|---------------|--------------|----+ |   |
                   | |    |               |              |    | |   |
                   | +----|---------------|--------------|----+ |   |
                   | |    |               |              |    | |   |
                   | +----|---------------|--------------|----+ |   |
                   | |    |               |              |    | |   |
                   | +----|---------------|--------------|----+ |   |
                   |      |               |              |      |   |
                   +--------------------------------------------+   o
                           \               \              \
                             20.08333..      61.75          103.4166..
                                 -             -                -
                             21.58333..      63.25          104.9166..



Thus we have three busbars which are 1.5 mm wide. There are 63 horizontal 
fingers of 200µm wide. The fingers have a spacing of 1.98387 mm. The fingers 
are 123mm long (i.e. there is a 1mm edge around the cell without fingers). There 
are two vertical fingers at the left and right side.


-Mesh Definition----------------------------------------------------------------
--------------------------------------------------------------------------------

If you define a regular mesh for the cell you will find you have to fit many 
geometric details in the mesh. For example the positions of the busbars, the 
positions of the fingers, the width of the fingers the width of the busbars, 
etc. If you want to use a regular mesh for that you will probably end up with a 
quite high number of elements, or, a mesh where for example the busbar width 
is not very accurate. 

In the pinup example this problem was solved by using a high resolution image 
to define an initial mesh and then simplify. However, it is also possible to 
use the strength of a variable mesh to fit all these sizes and positions in the 
mesh without resorting to a high resolution. In this example this is achieved 
by defining many meshes, all with various element sizes, and glue these meshes 
together to get new meshes which contain various element sizes and shapes 
which nicely coincide with the geometric details of the solar cell design. 

This obviously works best for designs with strictly rectangular geometries. 
Indeed, most geometric details in a standard grid design are very rectangular. 
However, not all details are. For that reason we also include such details in 
this example to show how that can be included.

To show that this method can also be used for very complicated geometries we 
include an option to define a complicated shading pattern. This example 
addresses the question of what would happen with a solar cell if Banksy would 
paint a rat on your cell. It may seem as a silly example but consider this:

With all building integrated PV coming up, where is the grafitty going to go? 


-Files in this Example----------------------------------------------------------
--------------------------------------------------------------------------------

CSiSTD.mos:	 PVMOS input file, here we define exverything
originalrat.jpg: Graffiti by Banksy (thankfully this was painted on a wall)
rat.svg:	 Schematic of the grafitty above
graffiti.dat:	 Polygon extracted from the svg file
