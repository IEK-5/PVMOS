###################################################################################################
# In this example we create a defect-free mesh for a 40x40 cm a-Si:H module.
# Note that is all we do, we create the mesh and save it. What we are really interested in is 
# local defects. We will shoot defects in the here created module using the Shunts.m script
###################################################################################################


###################################################################################################
# create the meshes. The following meshes are created
# cell_a:	mesh for the active part of a cell stripe (i.e., not including dead area)
# p1:		mesh for the p1 laser line
# da:		mesh for the area's between laser lines
# p2:		mesh for the p2 laser line
# p3:		mesh for the p3 laser line
# cp:		mesh for a contact trip connected to the positive electrode
# cn:		mesh for a contact strip to the negative electrode
###################################################################################################
#		x1  y1		x2  y2		Nx	Ny	name
newmesh 	0.0 0.0 	0.958   40 	50 	100 	cell_a
newmesh 	0.0 0.0 	8e-3 40 	1 	100 	p1
newmesh 	0.0 0.0 	12e-3 40 	1 	100 	da
newmesh 	0.0 0.0 	5e-3 40 	1 	100 	p2
newmesh 	0.0 0.0 	5e-3 40 	1 	100 	p3
newmesh 	0.0 0.0 	8e-3 40 	1 	100 	cp
newmesh 	0.0 0.0 	8e-3 40 	1 	100 	cn

###################################################################################################
# A mesh consists of nodes. The nodes in a mesh belong to areas. All meshed are initialized with 
# an area which is the same as the name of the mesh, and all nodes are assigned to it. You can 
# change the properties by using various commands starting with set_XX. You can also define new 
# areas and assign nodes to these new areas. More on that later. We first define the properties 
# per mesh. To refer to a certain area you must specify the mesh and the area name like so: 
# <mesh-name>.<area-name>
# Here we set the diode properties of the area cell_a in the mesh cell_a:
###################################################################################################
#		mesh.area	c	J0		n	Jph	Rs	Rsh		Eg
set_1DJV 	cell_a.cell_a 	0	2.4803e-12 	1.5 	0.015 	7.6529 	6.1273e+04	1.7
# here we set the sheet resistances for the same area, for the positive and negative electrodes
set_Rel		cell_a.cell_a	0	5
set_Rel		cell_a.cell_a	1	0.5

# here follow various areas for the various meshes
# set_R sets the resistance between front and back electrode, here we remove the contact
set_R 		p1.p1 	 	0	1e90
set_Rel		p1.p1		0	1e9
set_Rel		p1.p1		1	0.5
set_SplitX	p1.p1

set_1DJV 	da.da 		0	2.4803e-12 	1.5 	0.015 	7.6529 	6.1273e+04 	1.7
set_Rel		da.da		0	5
set_Rel		da.da		1	0.5
set_SplitX	da.da

set_R 		p2.p2 	 	0	1e-2
set_Rel		p2.p2		0	5
set_Rel		p2.p2		1	0.5
set_SplitX	p2.p2

set_R 		p3.p3 	 	0	1e90
set_Rel		p3.p3		0	5
set_Rel		p3.p3		1	1e9
set_SplitX	p3.p3

set_R 		cp.cp 	 	0	1e90
set_Rel		cp.cp		0	1e-3
set_Rel		cp.cp		1	1e3
set_Rvp 	cp.cp 		0	1e-8
set_SplitX	cp.cp

set_R 		cn.cn 	 	0	1e90
set_Rel		cn.cn		0	1e-3
set_Rel		cn.cn		1	1e3
set_Rvn 	cn.cn 		0	1e-8
set_SplitX	cn.cn

###################################################################################################
# Now we start to assemble the complete mesh out of the various parts. When joining meshes we 
# will use the coordinate system of the first mesh. The coordinate system of the second mesh can 
# be shifted by using an x and y offset value. Note that you have to take care not to make the 
# meshes overlap I have not (yet) inplemented error checking for this! In order to keep track 
# of the dimensions and avoid overlapping meshes I keep track of the total width of the mesh on 
# the comment lines below the join commands.
###################################################################################################
#	 xoff y_off	mesh1		mesh2	mesh_out
joinmesh_h 	0.0 	cell_a		p1	cell_p1	
joinmesh_h 	0.0 	cell_p1		da	cell_p1da
joinmesh_h 	0.0 	cell_p1da	p2	cell_p1dap2
joinmesh_h 	 0.0 	cell_p1dap2	da	cell_p1dap2da	
joinmesh_h	0.0 	cell_p1dap2da	p3	cell_p1dap2dap3		
# should be 1 cm wide		

###################################################################################################
# Note that we now have many meshes defined:
# 1.  cell_a
# 2.  p1
# 3.  da
# 4.  p3
# 5.  p3
# 6.  cp
# 7.  cn
# 8.  cell_p1	
# 9.  cell_p1da	
# 10. cell_p1dap2
# 11. cell_p1dap2da	
# 12. cell_p1dap2dap3
# The last mesh is cell stripe including dead area. We can easily series connect several cells 
# by joining several instances of the last mesh in a row. Here we series connect 40 cells
###################################################################################################
joinmesh_h 	0.0 	cell_p1dap2dap3		cell_p1dap2dap3		2cells	
joinmesh_h	0.0 	2cells			2cells			4cells		
joinmesh_h	0.0 	4cells			4cells			8cells		
joinmesh_h	0.0 	8cells			8cells			16cells		
joinmesh_h	0.0 	16cells			16cells			32cells		
joinmesh_h	0.0 	32cells			8cells			40cells			
# 40x40 cm2, 40 cells


###################################################################################################
# Now we add the contacts. Our final mesh will be called: module
###################################################################################################
joinmesh_h  0.0 	cp			40cells	cp40cells
joinmesh_h 0.0 		cp40cells		cn	module
savemesh module module_defectfree.bin				
