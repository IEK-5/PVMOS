################################################################################################
# This example demonstrates the simulation of a monolithically interconnected thin-film module 
# The following meshes are created
# cell_a:	mesh for the active part of a cell stripe (i.e., not including dead area)
# p1:		mesh for the p1 laser line
# da:		mesh for the area's between laser lines (for simplicity this mesh will be used
#               between p1 and p2 aswell as between p2 and p3)
# p2:		mesh for the p2 laser line
# p3:		mesh for the p3 laser line
# cp:		mesh for a contact trip connected to the positive electrode
# cn:		mesh for a contact strip to the negative electrode
################################################################################################
#		x1  y1		x2  y2		Nx	Ny	name
newmesh 	0.0 0.0 	0.5 30 		50 	30 	cell_a
newmesh 	0.0 0.0 	8e-3 30 	1 	30 	p1
newmesh 	0.0 0.0 	12e-3 30 	1 	30 	da
newmesh 	0.0 0.0 	5e-3 30 	1 	30 	p2
newmesh 	0.0 0.0 	5e-3 30 	1 	30 	p3
newmesh 	0.0 0.0 	8e-3 30 	1 	30 	cp
newmesh 	0.0 0.0 	8e-3 30 	1 	30 	cn

################################################################################################
# A mesh consists of elements. The elements in a mesh belong to areas. When a mesh is 
# initialized, all elements are part of the samedefault area. All areas that are part of a mesh
# must have a name. The nameof the default area is the same as the name of the mesh when it is 
# initialized. You can change the properties of an area by using "set" commands. You can also 
# define new areas and assign elements to these new areas. More on that later. We first define 
# the properties of the default areas for each mesh. To refer to a certain area you must specify 
# the mesh and the area name like so: <mesh-name>.<area-name>
# Here we set the diode properties of the area cell_a in the mesh cell_a:
################################################################################################
#		mesh.area	J0	n	Jph	Rs	Rsh	Temp	Eg
set_1DJV 	cell_a.cell_a 	1e-8 	1.5 	0.03 	1e-3 	1e4 	300 	1.12
# here we set the sheet resistances for the same area, for the positive and negative electrodes
set_Rp		cell_a.cell_a	20
set_Rn		cell_a.cell_a	1

# here follow various areas for the various meshes
# set_R sets the resistance between front and back electrode, here we remove the contact
set_R 		p1.p1 	 	1e90
set_Rp		p1.p1		1e9
set_Rn		p1.p1		1
set_SplitX	p1.p1		0

set_1DJV 	da.da 		1e-8 	1.5 	0.03 	1e-3 	1e4 	300 	1.12
set_Rp		da.da		20
set_Rn		da.da		1
set_SplitX	da.da		0

set_R 		p2.p2 	 	1e-5
set_Rp		p2.p2		20
set_Rn		p2.p2		1
set_SplitX	p2.p2		0

set_R 		p3.p3 	 	1e90
set_Rp		p3.p3		1e-3
set_Rn		p3.p3		1e9
set_SplitX	p3.p3		0


################################################################################################
# We have two contact strips. Within the strips we remove the solar cell (define it as a 
# resistors with a very high resistance). Either the positive or the negative electrode is made 
# very conductive, and connected to the positive applied voltage or 0V, respectively.
# we do not split elements in this mesh in the x direction.
################################################################################################

set_R 		cp.cp 	 	1e90
set_Rp		cp.cp		1e-3
set_Rpvp 	cp.cp 		1e-8
set_SplitX	cp.cp		0

set_R 		cn.cn 	 	1e90
set_Rn		cn.cn		0.1
set_Rpvn 	cn.cn 		1e-8
set_SplitX	cn.cn		0

################################################################################################
# Now we start to assemble the complete mesh out of the various parts. When joining meshes we 
# will use the coordinate system of the first mesh. The coordinate system of the second mesh can 
# be shifted by using an x and y offset value. Note that you have to take care not to make the 
# meshes overlap I have not (yet) inplemented error checking for this! Here I will use 
# jointmesh_h, which joins meshes horizontally and keeps track of the x-offset value for me 
# (i.e. the x-offset valueis computed as the maximum x-value in the first mesh).
################################################################################################
#	 xoff y_off	mesh1		mesh2	mesh_out
joinmesh_h 	0.0 	cell_a		p1	cell_p1			
# 0.5+0.008=0.508
joinmesh_h 	0.0 	cell_p1		da	cell_p1da		
# 0.508+0.012=0.52
joinmesh_h 	0.0 	cell_p1da	p2	cell_p1dap2		
# 0.52+0.005=0.525
joinmesh_h 	 0.0 	cell_p1dap2	da	cell_p1dap2da		
# 0.525+0.012=0.537
joinmesh_h	0.0 	cell_p1dap2da	p3	cell_p1dap2dap3		
# 0.537+0.005=0.542		

################################################################################################
# Note that we now have many meshes defined:
# 1.  cell_a
# 2.  p1
# 3.  da
# 4.  p3
# 5.  p3
# 6.  cp
# 7.  cn
# 8.  cell_p1	
# 9.  cell_p1da	
# 10. cell_p1dap2
# 11. cell_p1dap2da	
# 12. cell_p1dap2dap3
# The last mesh is cell stripe including dead area. We can easily series connect several cells 
# by joining several instances of the last mesh in a row. Here we series connect five cells
################################################################################################
joinmesh_h	0.0 	cell_p1dap2dap3		cell_p1dap2dap3	2cells			
# 0.542+0.542=1.084
joinmesh_h	0.0 	2cells			cell_p1dap2dap3	3cells			
# 1.084+0.542=1.626
joinmesh_h	0.0 	3cells			cell_p1dap2dap3	4cells			
# 1.626+0.542=2.168
joinmesh_h	0.0 	4cells			cell_p1dap2dap3	5cells			
# 2.168+0.542=2.710

################################################################################################
# Now we add the contacts. Our final mesh will be called: cells
################################################################################################
joinmesh_h	0.0 	cp			5cells	cp5cells			
# 8e-3+2.710=2.718
joinmesh_h	0.0 	cp5cells		cn	cells				
# 2.718+8e-3=2.726



################################################################################################
# Now we have three perfectly homogeneous cells. That is boring so we add a shunt in the middle 
# cell. First we create a new area. This should be part of the cells mesh. We can create a new 
# area simply by starting to specify its properties, a new area will automatically be created.
################################################################################################
# set_JV		cells.shunt	shunt.dat
set_R 		cells.shunt 	1e-3
set_Rp		cells.shunt	20
set_Rn		cells.shunt	1

################################################################################################
# So far the creation of this area has no effect as no nodes are assigned to the area. However, 
# before we assign nodes to this area we need a better resolution as the nodes in the cell area 
# are now 0.01x1.0 cm^2, which is not sufficient to specify a small defect. I will add a defect
# at the coordinate (0.7,15). Refining the mesh will be done by selecting nodes and subsequently 
# splitting the nodes. As the nodes are long in the y direction we first split the nodes only in 
# the y-direction. The select_circ creates a circular selection, Only nodes whose center fall 
# within the specified circle are selected. The circle is specified by its center coordinates 
# (xc,yc) and the radius, r. The split commands automatically use the selected nodes. Beware
# that if no nodes are selected prior to giving a split command, all nodes in the mesh are split
################################################################################################
#           xc  yc r mesh
select_circ 1.5 15 4 cells
split_y cells

select_circ 1.5 15 3 cells
split_y cells

select_circ 1.5 15 2 cells
split_y cells

select_circ 1.5 15 1 cells
split_y cells

select_circ 1.5 15 0.1 cells
split_y cells

select_circ 1.5 15 0.07 cells
split_y cells

select_circ 1.5 15 0.06 cells
split_y cells

################################################################################################
# Note that I gradually reduced the radius of the circle to get a denser and senser mesh around 
# the coordinate (0.7,15). The nodes at this coordinate are now about 0.01x0.0078 cm^2 large. As 
# the nodes are now close enough to quadratic we now split the nodes three times in both x- and
# y- direction to get a satifactory resolution with nodes of about 10µm x 10µm. Note that in a
# regular, equidistant mesh such node sizes would result in meshes of almost 50 milion nodes 
# where the mesh here is about 20000 nodes large.
################################################################################################
select_circ 1.5 15 0.05 cells
split_xy cells


################################################################################################
# Now we have at the location of the shunt nodes of about 0.001x0.001 cm^2, this suffices for 
# a defect with a radius of about 0.01 cm and up. As we already defined the shunt properties
# of the area "shunt" we only need to assign nodes to this area. To this and we select the nodes 
# and then assign them (note if you do not select nodes before you do this, all the nodes in the 
# mesh will be assigned to the shunt area.
################################################################################################
select_circ 1.5 15 0.04 cells
assign_properties cells.shunt



################################################################################################
# Now we print some stuff so we can check whether we made no mistakes.
# printmesh prints the mesh (i.e. contour of each node)
# printpars prints the name, id number and parameters for each area in a mesh
# printarea prints the meah and adds element id and area id for each element
# printconn prints the connections between nodes (verctors from center to center of a node 
# (bi-directional)
################################################################################################
printmesh cells mesh_initial.dat
printpars cells pars.dat
printarea cells areas.dat
printconn cells conn.dat

################################################################################################
# Finaly do some simulations, we start by adapting the mesh a few iterations (5). The adapttive
# solve command expects as arguments:
# 1: the mesh to adapt
# 2: the applied voltage
# 3: adaption factor, af,  (lower value means more nodes are adapted each iteration)
# 4: number of iterations for the mesh adaption 
# We also output the refined mesh
################################################################################################
# 		mesh	V	af	iterations
adaptive_solve 	cells 	2.4 	0.3 	5
printmesh cells mesh_refined.dat

################################################################################################
# Now we simulate an IV curve, save it to IV.dat and plot the spatial potential distribution
# for the available simulation that is closest to 4.0 V
################################################################################################
solve cells -0.5 4.0 46
printIV cells IV.dat
printV cells checkpot.dat
surfVplot cells 0.008 14.0 2.718 16 300 400 4.0 thin_film_detail.dat
surfVplot cells 0.008 0 2.718 30 300 400 4.0 thin_film_wholedevice.dat
